# Google Cloud builder steps to build our helm charts and docker images on gcr.io.
steps:
# Get the helm command.
- name: gcr.io/cloud-builders/wget
  args: ['-O', 'helm.tar.gz', 'https://storage.googleapis.com/kubernetes-helm/helm-v2.7.2-linux-amd64.tar.gz']
# Build helm charts and push to gs bucket.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: ./etc/cloud-build-push-charts.sh
- name: 'gcr.io/cloud-builders/wget'
  # Run dl.sh download script with options to use wget (-w).
  entrypoint: './dl.sh'
  args: ['-w']
  dir: 'docker'
  env:
#  - 'BUILD_ID=$BUILD_ID'
#  - 'PROJECT=$PROJECT_ID'
#  - 'REV=$REVISION_ID'
#  - 'BRANCH_NAME=$BRANCH_NAME'
#  - 'REPO_NAME=$REPO_NAME'
#  - 'TAG_NAME=$TAG_NAME'
  # Set _API_KEY in the cloudbuild
  # console https://console.cloud.google.com/gcr/triggers?project=engineering-devops
  # This is the credential to pull product binaries from the ForgeRock Artifactory repository.
  - 'API_KEY=${_ARTIFACTORY_API_KEY}'
- name: 'gcr.io/cloud-builders/docker'
  dir: 'docker'
  # Run the script to build the docker images with options -a (authenticate) and -p (push)
  entrypoint: './build.sh'
  args: ['-a', '-p']
  env:
  # Set _DOCKER_USERNAME and _DOCKER_PASSWORD in the cloudbuild
  # console https://console.cloud.google.com/gcr/triggers?project=engineering-devops
  # These are the credentials needed to push images to your private docker registry.
  - 'DOCKER_USER=${_DOCKER_USER}'
  - 'DOCKER_PASSWORD=${_DOCKER_PASSWORD}'
# Since we are building bintray images by default, we don't need to tell the builder about GCR images.
# TODO: We may want to look at tagging the above images and sending them to gcr.io for local testing.
#images:
#- 'gcr.io/$PROJECT_ID/opendj'
#- 'gcr.io/$PROJECT_ID/openidm'
#- 'gcr.io/$PROJECT_ID/openig'
#- 'gcr.io/$PROJECT_ID/openam'
#- 'gcr.io/$PROJECT_ID/amster'
#- 'gcr.io/$PROJECT_ID/util'
